<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.shop.mappers.shopMapper">
	 
	 <!-- 카테고리별 상품 리스트 : 1차 분류 -->
	<select id="list_1" resultType="com.shop.shopping.domain.GoodsViewVO">
		select g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsDate, g.gdsImg, g.gdsThumbImg
		from tbl_goods g
		inner join goods_category c
		on g.cateCode = c.cateCode
		where g.cateCode = #{cateCode}
		or c.cateCodeRef = #{cateCodeRef}
	</select>
		
	<!-- 카테고리별 상품 리스트 : 2차 분류 -->
	<select id="list_2" resultType="com.shop.shopping.domain.GoodsViewVO">
		select g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsDate, g.gdsImg, g.gdsThumbImg
		from tbl_goods g
		inner join goods_category c
		on g.cateCode = c.cateCode
		where g.cateCode = #{cateCode}
	</select>
	
	<!-- 상품 소감(댓글) 작성 -->
	<insert id="registerReply">
		insert into tbl_reply (gdsNum, userId, repNum, repCon)
		values (#{gdsNum}, #{userId}, nextval(tbl_reply_seq), #{repCon} )
	</insert>	
	
	<!-- 상품 소감(댓글) 리스트 -->
	<select id="replyList" resultType ="com.shop.shopping.domain.ReplyListVO">
		select r.gdsNum, r.userId, r.repNum, r.repCon, r.repDate, m.userName
		  from tbl_reply r
		 inner join tbl_member m
		    on r.userId = m.userId
		 where gdsNum = #{gdsNum} 
	</select>
	
	<!-- 상품 소감(댓글) 삭제 -->
	<delete id="deleteReply">
		delete from tbl_reply
		where repNum = #{repNum}
		 and userId = #{userId}
	</delete>

	<!-- 아이디 체크 -->
	<select id="replyUserIdCheck" resultType="String">
		select userId
			from tbl_reply
	  	  where repNum = #{repNum}
	</select>
		
	<!-- 상품 소감(댓글) 수정 -->
	<update id="modifyReply">
		update tbl_reply
		set repCon = #{repCon}
		where repNum = #{repNum}
		and userId = #{userId}
	</update>
	
	<!-- 카트 담기 -->
	<insert id="addCart">
		insert into tbl_cart ( cartNum, userId, gdsNum, cartStock)
		values(nextval(tbl_cart_seq), #{userId}, #{gdsNum}, #{cartStock})
	</insert>
	
	<!-- 카트 리스트 -->
	<select id="cartList" resultType="com.shop.shopping.domain.CartListVO">
		SELECT row_number() over(ORDER BY c.cartNum DESC) AS num,
			   c.cartNum, c.userId, c.gdsNum, c.cartStock, c.addDate, g.gdsName,
			   g.gdsPrice, g.gdsThumbImg
  		  FROM tbl_cart c
  		 INNER JOIN tbl_goods g
    		ON c.gdsNum = g.gdsNum
 		 WHERE c.userId = #{userId}
	</select>
	
	<!-- 카트 삭제 -->
	<delete id="deleteCart">
		delete from tbl_cart
		 where cartNum = #{cartNum}
		   and userId = #{userId} 
	</delete>
	
	<!-- 주문 정보 저장-->
	<insert id="orderInfo">
		insert into tbl_order(orderId, userId, orderRec, userAddr1, userAddr2, userAddr3, orderPhon, amount)
		values(#{orderId}, #{userId}, #{orderRec}, #{userAddr1}, #{userAddr2}, #{userAddr3}, #{orderPhon}, #{amount})
	</insert>
	
	<!-- 주문 상세 정보 저장 -->
	<insert id="orderInfo_Details">
		insert into tbl_order_details(orderDetailsNum, orderId, gdsNum, cartStock)
		select nextval(tbl_order_details_seq), #{orderId}, gdsNum, cartStock
		from tbl_cart
	</insert>
	
	<!-- 주문 확인 후 카트 비우기 -->
	<delete id="cartAllDelete">
		delete from tbl_cart
		where userId = #{userId}
	</delete>
	
	<!-- 특정 유저의 주문 목록 -->
	<select id="orderList" resultType="com.shop.shopping.domain.OrderVO">
		select orderId, userId, orderRec, userAddr1, userAddr2, userAddr3, orderPhon, amount, orderDate, delivery
		from tbl_order
		where userId = #{userId}
	</select>
	
	<!-- 특정 주문 목록 -->
	<select id="orderView" resultType="com.shop.shopping.domain.OrderListVO">
	SELECT o.orderId, o.userId, o.orderRec, o.userAddr1, o.userAddr2, o.userAddr3, o.orderPhon, o.amount, o.orderDate, o.delivery,
			 d.orderDetailsNum, d.gdsNum, d.cartStock,
			 g.gdsName, g.gdsThumbImg, g.gdsPrice
	  FROM tbl_order o
	 INNER JOIN tbl_order_details d
	    ON o.orderid = d.orderId
	 INNER JOIN tbl_goods g
	    ON d.gdsNum = g.gdsNum
	 WHERE o.userId = #{userId}
	   AND o.orderId = #{orderId}
	</select>
	
 </mapper>