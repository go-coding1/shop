<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.shop.mappers.adminMapper">
 
	<!-- 카테고리 호출 -->
	<select id="category" resultType = "com.shop.shopping.domain.CategoryVO">
		WITH recursive cte AS(
			SELECT cateName, cateCode, cateCodeRef, 1 AS level
			FROM goods_category
			WHERE cateCodeRef IS null
			UNION all
			SELECT p.cateName, p.cateCode, p.cateCodeRef, 1+LEVEL AS LEVEL
			FROM goods_category p
			INNER JOIN cte
			ON p.cateCodeRef = cte.cateCode
		)
		SELECT cateName,cateCode,cateCodeRef,LEVEL FROM cte
	</select>
	
	<!-- 상품등록 -->
	<insert id="register">
		insert into tbl_goods (gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg, gdsThumbImg)
		values (NEXTVAL(tbl_goods_seq), #{gdsName}, #{cateCode}, #{gdsPrice}, #{gdsStock}, #{gdsDes}, #{gdsImg}, #{gdsThumbImg})
	</insert>
	
	<!-- 상품 목록 -->
	<!-- 
	<select id="goodslist" resultType = "com.shop.shopping.domain.GoodsVO">
		SELECT gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
		  FROM tbl_goods
		 ORDER BY gdsNum DESC;
	</select>
	 -->
	 <select id="goodslist" resultType="com.shop.shopping.domain.GoodsViewVO">
	 	select  g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate, g.gdsImg, g.gdsThumbImg
          from tbl_goods g
         inner join goods_category c
            on g.cateCode = c.cateCode
	 </select>
	 
	<!-- 상품 조회 -->
	<!-- 
	<select id="goodsView" resultType = "com.shop.shopping.domain.GoodsVO">
		SELECT gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate
		  FROM tbl_goods
		 WHERE gdsNum = #{gdsNum} 
	</select>
	 -->
	 
	<!-- 상품 조회 + 카테고리 조인 -->
	<select id="goodsView" resultType="com.shop.shopping.domain.GoodsViewVO">
		SELECT g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, g.gdsPrice, g.gdsStock, g.gdsDate, g.gdsImg, g.gdsDes, g.gdsImg, g.gdsThumbImg
			FROM tbl_goods g
			INNER JOIN goods_category c
			ON g.cateCode = c.cateCode
			WHERE g.gdsNum = #{gdsNum}
	</select>
	
	<!-- 상품 수정 -->
	<update id="goodsModify">
		update tbl_goods
		   set gdsName = #{gdsName}
		      ,cateCode = #{cateCode}
		      ,gdsPrice = #{gdsPrice}
		      ,gdsStock = #{gdsStock}
		      ,gdsDes   = #{gdsDes}
		      
		      ,gdsImg = #{gdsImg}
		      ,gdsThumbImg = #{gdsThumbImg}
		 where gdsNum   = #{gdsNum}
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="goodsDelete">
		delete from tbl_goods
		where gdsNum = #{gdsNum}
	</delete>
	
	<!-- 모든 유저의 주문 목록 -->
	<select id="orderList" resultType="com.shop.shopping.domain.OrderVO">
		SELECT orderId, userId, orderRec, userAddr1, userAddr2, userAddr3, orderPhon, amount, orderDate, delivery
  		  FROM tbl_order
	</select>
	
	<!--  특정 주문 목록 -->
	<select id="orderView" resultType="com.shop.shopping.domain.OrderListVO">
		SELECT o.orderId, o.userId, o.orderRec, o.userAddr1, o.userAddr2, o.userAddr3, o.orderPhon, o.amount, o.orderDate, o.delivery,
			 d.orderDetailsNum, d.gdsNum, d.cartStock,
			 g.gdsName, g.gdsThumbImg, g.gdsPrice
		FROM tbl_order o
       INNER JOIN tbl_order_details d
		  ON o.orderid = d.orderId
	   INNER JOIN tbl_goods g
		  ON d.gdsNum = g.gdsNum
	   WHERE o.orderId = #{orderId}
	</select>
	
	<!-- 배송 상태 -->
	<update id="delivery">
		update tbl_order
		   set delivery = #{delivery}
		 where orderId = #{orderId} 
		 
	</update>
	
	<!-- 상품 수량 조절 -->
	<update id="changeStock">
		update tbl_goods
		   set gdsStock = gdsStock - #{gdsStock}
		 where gdsNum = #{gdsNum}
	</update>
 </mapper>
 